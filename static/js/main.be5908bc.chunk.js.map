{"version":3,"sources":["components/Player.js","components/Bird.js","components/Hearts.js","components/Staff.js","components/NoteButton.js","components/Input.js","components/Forest.js","components/App.js","serviceWorker.js","index.js"],"names":["Player","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","react_default","a","createElement","onClick","props","attack","className","concat","type","status","Component","Bird","Hearts","heartTotal","count","map","point","index","key","char","Staff","clef","currentPitch","NoteButton","letter","submitLetter","Input","components_NoteButton","Forest","guess","playerAttack","birdAttack","playerStatus","gameOver","setState","birdStatus","hurtBirdTimeout","setTimeout","hurtBird","timeouts","push","hurtPlayerTimeout","hurtPlayer","birdHearts","findIndex","heart","console","log","splice","length","filter","timeout","setRandomPitch","victoryTimeout","victory","playerHearts","shift","switchGender","playerType","resetGame","forEach","clearTimeout","undefined","Math","floor","random","components_Hearts","components_Player","components_Bird","components_Staff","components_Input","App","components_Forest","Boolean","window","location","hostname","match","ReactDOM","render","components_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.be5908bc.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"../css/Player.css\";\n\nclass Player extends Component {\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div\n        onClick={this.props.attack}\n        className={`player ${this.props.type} ${this.props.status}`}\n      >\n        <div className={`player-hit ${this.props.status}`} />\n      </div>\n    );\n  }\n}\n\nexport default Player;\n","import React, { Component } from \"react\";\nimport \"../css/Bird.css\";\n\nclass Bird extends Component {\n  constructor() {\n    super();\n\n    this.state = {};\n  }\n\n  render() {\n    return (\n      <div onClick={this.props.attack} className={`bird ${this.props.status}`}>\n        <div className={`bird-hit ${this.props.status}`} />\n      </div>\n    );\n  }\n}\n\nexport default Bird;\n","import React from \"react\";\nimport \"../css/Hearts.css\";\n\nconst Hearts = props => {\n  const heartTotal = props.count.map((point, index) => {\n    return <div key={`${props.char}${index}`} className=\"heart-point\" />;\n  });\n\n  return <section className={`hearts ${props.char}`}>{heartTotal}</section>;\n};\n\nexport default Hearts;\n","import React, { Component } from \"react\";\nimport \"../css/Staff.css\";\n\nclass Staff extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    return (\n      <div className=\"staff\">\n        <div className={`clef ${this.props.clef}`} />\n        <div className={`note ${this.props.currentPitch}`} />\n      </div>\n    );\n  }\n}\n\nexport default Staff;\n","import React from \"react\";\n\nconst NoteButton = props => {\n  return (\n    <div\n      className={`${props.letter} pitch`}\n      onClick={() => {\n        props.submitLetter(props.letter);\n      }}\n    >\n      {props.letter}\n    </div>\n  );\n};\n\nexport default NoteButton;\n","import React, { Component } from \"react\";\nimport \"../css/Input.css\";\n\nimport NoteButton from \"./NoteButton\";\n\nclass Input extends Component {\n  constructor() {\n    super();\n  }\n\n  render() {\n    const { submitLetter } = this.props;\n\n    return (\n      <section className=\"input-section\">\n        <NoteButton submitLetter={submitLetter} letter=\"a\" />\n        <NoteButton submitLetter={submitLetter} letter=\"b\" />\n        <NoteButton submitLetter={submitLetter} letter=\"c\" />\n        <NoteButton submitLetter={submitLetter} letter=\"d\" />\n        <NoteButton submitLetter={submitLetter} letter=\"e\" />\n        <NoteButton submitLetter={submitLetter} letter=\"f\" />\n        <NoteButton submitLetter={submitLetter} letter=\"g\" />\n      </section>\n    );\n  }\n}\n\nexport default Input;\n","import React, { Component } from \"react\";\nimport \"../css/Forest.css\";\n\nimport Player from \"./Player\";\nimport Bird from \"./Bird\";\nimport Hearts from \"./Hearts\";\nimport Staff from \"./Staff\";\nimport Input from \"./Input\";\n\nclass Forest extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      playerStatus: \"idle\",\n      playerHearts: [0, 0, 0],\n      playerType: \"player-one\",\n      birdStatus: \"idle\",\n      birdHearts: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"],\n      gameOver: false,\n      currentPitch: undefined\n    };\n\n    this.timeouts = [];\n  }\n\n  componentDidMount() {\n    this.setRandomPitch();\n  }\n\n  setRandomPitch() {\n    const index = Math.floor(Math.random() * this.state.birdHearts.length);\n    const currentPitch = this.state.birdHearts[index];\n    this.setState({\n      currentPitch\n    });\n  }\n\n  submitLetter = guess => {\n    if (guess === this.state.currentPitch) {\n      this.playerAttack();\n    } else {\n      this.birdAttack();\n    }\n  };\n\n  playerAttack = () => {\n    if (\n      this.state.playerStatus !== \"attack\" &&\n      this.state.playerStatus !== \"hit\" &&\n      !this.state.gameOver\n    ) {\n      this.setState({\n        playerStatus: \"attack\",\n        birdStatus: \"hit\"\n      });\n\n      const hurtBirdTimeout = setTimeout(this.hurtBird, 750);\n      this.timeouts.push(hurtBirdTimeout);\n    }\n  };\n\n  birdAttack = () => {\n    if (\n      this.state.birdStatus !== \"attack\" &&\n      this.state.birdStatus !== \"hit\" &&\n      !this.state.gameOver\n    ) {\n      this.setState({\n        birdStatus: \"attack\",\n        playerStatus: \"hit\"\n      });\n\n      const hurtPlayerTimeout = setTimeout(this.hurtPlayer, 700);\n      this.timeouts.push(hurtPlayerTimeout);\n    }\n  };\n\n  hurtBird = () => {\n    const index = this.state.birdHearts.findIndex(\n      heart => heart === this.state.currentPitch\n    );\n\n    console.log(index);\n\n    let birdHearts = this.state.birdHearts.map(heart => heart);\n    birdHearts.splice(index, 1);\n\n    if (birdHearts.length > 0) {\n      this.setState({\n        playerStatus: \"idle\",\n        birdStatus: \"idle\",\n        birdHearts\n      });\n      this.timeouts = this.timeouts.filter(timeout => {\n        return timeout !== \"hurtBirdTimeout\";\n      });\n      this.setRandomPitch();\n    } else {\n      this.setState({\n        playerStatus: \"idle\",\n        birdStatus: \"dead\",\n        birdHearts,\n        gameOver: true\n      });\n      this.timeouts = this.timeouts.filter(timeout => {\n        return timeout !== \"hurtBirdTimeout\";\n      });\n      const victoryTimeout = setTimeout(this.victory, 3000);\n      this.timeouts.push(victoryTimeout);\n    }\n  };\n\n  hurtPlayer = () => {\n    let playerHearts = this.state.playerHearts.map(heart => heart);\n    playerHearts.shift();\n\n    if (playerHearts.length > 0) {\n      this.setState({\n        playerStatus: \"idle\",\n        birdStatus: \"idle\",\n        playerHearts\n      });\n      this.timeouts = this.timeouts.filter(timeout => {\n        return timeout !== \"hurtPlayerTimeout\";\n      });\n    } else {\n      this.setState({\n        playerStatus: \"dead\",\n        birdStatus: \"idle\",\n        playerHearts,\n        gameOver: true\n      });\n    }\n  };\n\n  victory = () => {\n    this.setState({\n      playerStatus: \"victory\"\n    });\n    this.timeouts = this.timeouts.filter(timeout => {\n      return timeout !== \"victoryTimeout\";\n    });\n  };\n\n  switchGender = () => {\n    if (this.state.gameOver) {\n      return;\n    }\n    if (this.state.playerType === \"player-one\") {\n      this.setState({\n        playerType: \"player-two\"\n      });\n    } else {\n      this.setState({\n        playerType: \"player-one\"\n      });\n    }\n  };\n\n  resetGame = () => {\n    this.timeouts.forEach(timeout => {\n      clearTimeout(timeout);\n    });\n    this.setState({\n      playerStatus: \"idle\",\n      playerHearts: [0, 0, 0],\n      birdStatus: \"idle\",\n      birdHearts: [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\"],\n      gameOver: false\n    });\n  };\n\n  render() {\n    return (\n      <main className=\"game-wrapper\">\n        <div className=\"button-wrapper\">\n          <button onClick={this.switchGender}>switch character</button>\n          <button onClick={this.resetGame}>reset</button>\n        </div>\n        <section className=\"forest\">\n          <Hearts char=\"player-life\" count={this.state.playerHearts} />\n          <Player\n            type={this.state.playerType}\n            attack={this.playerAttack}\n            status={this.state.playerStatus}\n          />\n          <Bird attack={this.birdAttack} status={this.state.birdStatus} />\n          <Hearts char=\"bird-life\" count={this.state.birdHearts} />\n        </section>\n        <Staff currentPitch={this.state.currentPitch} />\n        <Input submitLetter={this.submitLetter} />\n      </main>\n    );\n  }\n}\n\nexport default Forest;\n","import React, { Component } from \"react\";\nimport \"../css/App.css\";\n\nimport Forest from \"./Forest\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Forest />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}